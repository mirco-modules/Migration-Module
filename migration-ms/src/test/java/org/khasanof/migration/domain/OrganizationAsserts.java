package org.khasanof.migration.domain;

import org.khasanof.migration.domain.common.Organization;

import static org.assertj.core.api.Assertions.assertThat;

public class OrganizationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrganizationAllPropertiesEquals(Organization expected, Organization actual) {
        assertOrganizationAutoGeneratedPropertiesEquals(expected, actual);
        assertOrganizationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrganizationAllUpdatablePropertiesEquals(Organization expected, Organization actual) {
        assertOrganizationUpdatableFieldsEquals(expected, actual);
        assertOrganizationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrganizationAutoGeneratedPropertiesEquals(Organization expected, Organization actual) {
        assertThat(expected)
            .as("Verify Organization auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrganizationUpdatableFieldsEquals(Organization expected, Organization actual) {
        assertThat(expected)
            .as("Verify Organization relevant properties")
            .satisfies(e -> assertThat(e.getTenantId()).as("check tenantId").isEqualTo(actual.getTenantId()))
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrganizationUpdatableRelationshipsEquals(Organization expected, Organization actual) {}
}
